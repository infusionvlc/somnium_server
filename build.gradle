buildscript {
  ext {
    kotlinVersion = '1.2.51'
    springBootVersion = '2.0.5.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
  }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.infusionvlc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "1.8"
  }
}

repositories {
  jcenter()
  mavenCentral()
}

configurations {
  ktlint
}


dependencies {
  implementation('org.springframework.boot:spring-boot-starter-actuator')
  implementation('org.springframework.boot:spring-boot-starter-data-jpa')
  implementation('org.springframework.boot:spring-boot-starter-security')
  implementation("io.jsonwebtoken:jjwt:0.7.0")
  implementation('org.springframework.boot:spring-boot-starter-web')
  implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
  implementation("org.jetbrains.kotlin:kotlin-reflect")
  runtimeOnly('org.springframework.boot:spring-boot-devtools')
  runtimeOnly('com.h2database:h2')
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('org.springframework.security:spring-security-test')

  ktlint "com.github.shyiko:ktlint:0.20.0"

  implementation "io.arrow-kt:arrow-core:0.7.3"

  implementation "io.springfox:springfox-swagger2:2.9.2"
  implementation "io.springfox:springfox-swagger-ui:2.9.2"
}

task ktlint(type: JavaExec, group: "verification") {
  description = "Check Kotlin code style"
  classpath = configurations.ktlint
  main = "com.github.shyiko.ktlint.Main"
  args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
  description = "Fix Kotlin code style deviations"
  classpath = configurations.ktlint
  main = "com.github.shyiko.ktlint.Main"
  args "-F", "src/**/*.kt"
}
